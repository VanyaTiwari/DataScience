Crime_type <- factor(NI_crime_data$Crime.type, order = FALSE)
csv_file_list <- list.files(path = "C:/Big Data/Data science/Practicals/Data/NI Crime Data/NI Crime Data", pattern = "*.csv", recursive = TRUE)
csv_file_list
myfiles = lapply(csv_file_list, read.delim)
combine_files <- function(file_list) {     NI_crime_file <- NULL     for (i in file_list) {         temp_file <- read.csv(header = TRUE, paste("C:/Big Data/Data science/Practicals/Data/NI Crime Data/NI Crime Data/", i, sep = ""), stringsAsFactors = FALSE)         NI_crime_file <- rbind(NI_crime_file, temp_file)     }     return(NI_crime_file) }
combine_files <- function(file_list) {     NI_crime_file <- NULL     for (i in file_list) {         temp_file <- read.csv(header = TRUE, paste("C:/Big Data/Data science/Practicals/Data/NI Crime Data/NI Crime Data/", i, sep = ""), stringsAsFactors = FALSE)         NI_crime_file <- rbind(NI_crime_file, temp_file)     }     return(NI_crime_file) }
combine_files <- function(file_list) {     NI_crime_file <- NULL     for (i in file_list) {         temp_file <- read.csv(header = TRUE, paste("C:/Big Data/Data science/Practicals/Data/NI Crime Data/NI Crime Data/", i, sep = ""), stringsAsFactors = FALSE)         NI_crime_file <- rbind(NI_crime_file, temp_file)     }     return(NI_crime_file) }
NI_crime_data <- combine_files(csv_file_list)
str(NI_crime_data)
str(NI_crime_data)
write.csv(NI_crime_data, file = "Data/AllNICrimeData.csv", quote = FALSE, na = "", row.names = FALSE)
AllNICrime_data <- read.csv("Data/AllNICrimeData.csv")
#No. of rows in AllNICrime file
nrow(AllNICrime_data)
#Removing the unwanted columns
str(AllNICrime_data)
AllNICrime_data$Crime.ID <- NULL
AllNICrime_data$Reported.by <- NULL
AllNICrime_data$Falls.within <- NULL
AllNICrime_data$LSOA.code <- NULL
AllNICrime_data$LSOA.name <- NULL
AllNICrime_data$Last.outcome.category <- NULL
AllNICrime_data$Context <- NULL
str(AllNICrime_data)
AllNICrime_data$Location <- sapply(AllNICrime_data$Location, function(x) { x <- gsub("On or near", '', AllNICrime_data$Location) })
AllNICrime_data$Location <- sapply(AllNICrime_data$Location, function(x) { x <- gsub("On or near", '', AllNICrime_data$Location) })
csv_file_list <- list.files(path = "C:/Big Data/Data science/Practicals/Data/NI Crime Data/NI Crime Data", pattern = "*.csv", recursive = TRUE)
csv_file_list
myfiles = lapply(csv_file_list, read.delim)
combine_files <- function(file_list) {     NI_crime_file <- NULL     for (i in file_list) {         temp_file <- read.csv(header = TRUE, paste("C:/Big Data/Data science/Practicals/Data/NI Crime Data/NI Crime Data/", i, sep = ""), stringsAsFactors = FALSE)         NI_crime_file <- rbind(NI_crime_file, temp_file)     }     return(NI_crime_file) }
NI_crime_data <- combine_files(csv_file_list)
str(NI_crime_data)
write.csv(NI_crime_data, file = "Data/AllNICrimeData.csv", quote = FALSE, na = "", row.names = FALSE)
AllNICrime_data <- read.csv("Data/AllNICrimeData.csv")
#No. of rows in AllNICrime file
nrow(AllNICrime_data)
#Removing the unwanted columns
str(AllNICrime_data)
AllNICrime_data$Crime.ID <- NULL
AllNICrime_data$Reported.by <- NULL
AllNICrime_data$Falls.within <- NULL
AllNICrime_data$LSOA.code <- NULL
AllNICrime_data$LSOA.name <- NULL
AllNICrime_data$Last.outcome.category <- NULL
AllNICrime_data$Context <- NULL
str(AllNICrime_data)
#Factorizing crime_type attribute
Crime_type <- factor(NI_crime_data$Crime.type, order = FALSE)
NI_crime_data$Crime.type <- Crime_type
str(NI_crime_data)
#Modifying location attribute
AllNICrime_data$Location <- sapply(AllNICrime_data$Location, function(x) { x <- gsub("On or near", '', AllNICrime_data$Location) })
str(AllNICrime_data)
#Amalgamating all crime data into single file.
csv_file_list <- list.files(path = "C:/Big Data/Data science/Practicals/Data/NI Crime Data/NI Crime Data", pattern = "*.csv", recursive = TRUE)
csv_file_list
combine_files <- function(file_list) {     NI_crime_file <- NULL     for (i in file_list) {         temp_file <- read.csv(header = TRUE, paste("C:/Big Data/Data science/Practicals/Data/NI Crime Data/NI Crime Data/", i, sep = ""), stringsAsFactors = FALSE)         NI_crime_file <- rbind(NI_crime_file, temp_file)     }     return(NI_crime_file) }
NI_crime_data <- combine_files(csv_file_list)
str(NI_crime_data)
write.csv(NI_crime_data, file = "Data/AllNICrimeData.csv", quote = FALSE, na = "", row.names = FALSE)
AllNICrime_data <- read.csv("Data/AllNICrimeData.csv")
#No. of rows in AllNICrime file
nrow(AllNICrime_data)
#Removing the unwanted columns
str(AllNICrime_data)
AllNICrime_data$Crime.ID <- NULL
AllNICrime_data$Reported.by <- NULL
AllNICrime_data$Falls.within <- NULL
AllNICrime_data$LSOA.code <- NULL
AllNICrime_data$LSOA.name <- NULL
AllNICrime_data$Last.outcome.category <- NULL
AllNICrime_data$Context <- NULL
str(AllNICrime_data)
#Factorizing crime_type attribute
Crime_type <- factor(NI_crime_data$Crime.type, order = FALSE)
NI_crime_data$Crime.type <- Crime_type
str(NI_crime_data)
#Modifying location attribute
#Modifying location attributeAllNICrime_data$Location <- sapply(AllNICrime_data$Location, function(x) { AllNICrime_data$Location <- gsub("On or near", '', AllNICrime_data$Location) })
head(AllNICrime_data)
csv_file_list <- list.files(path = "C:/Big Data/Data science/Practicals/Data/NI Crime Data/NI Crime Data", pattern = "*.csv", recursive = TRUE)
csv_file_list
combine_files <- function(file_list) {     NI_crime_file <- NULL     for (i in file_list) {         temp_file <- read.csv(header = TRUE, paste("C:/Big Data/Data science/Practicals/Data/NI Crime Data/NI Crime Data/", i, sep = ""), stringsAsFactors = FALSE)         NI_crime_file <- rbind(NI_crime_file, temp_file)     }     return(NI_crime_file) }
NI_crime_data <- combine_files(csv_file_list)
str(NI_crime_data)
write.csv(NI_crime_data, file = "Data/AllNICrimeData.csv", quote = FALSE, na = "", row.names = FALSE)
AllNICrime_data <- read.csv("Data/AllNICrimeData.csv")
#No. of rows in AllNICrime file
nrow(AllNICrime_data)
#Removing the unwanted columns
str(AllNICrime_data)
AllNICrime_data$Crime.ID <- NULL
AllNICrime_data$Reported.by <- NULL
AllNICrime_data$Falls.within <- NULL
AllNICrime_data$LSOA.code <- NULL
AllNICrime_data$LSOA.name <- NULL
AllNICrime_data$Last.outcome.category <- NULL
AllNICrime_data$Context <- NULL
str(AllNICrime_data)
#Factorizing crime_type attribute
Crime_type <- factor(NI_crime_data$Crime.type, order = FALSE)
NI_crime_data$Crime.type <- Crime_type
str(NI_crime_data)
#Modifying location attribute
AllNICrime_data$Location <- sapply(AllNICrime_data$Location, function(x) { AllNICrime_data$Location <- gsub("On or near", '', AllNICrime_data$Location) })
csv_file_list <- list.files(path = "C:/Big Data/Data science/Practicals/Data/NI Crime Data/NI Crime Data", pattern = "*.csv", recursive = TRUE)
csv_file_list
combine_files <- function(file_list) {     NI_crime_file <- NULL     for (i in file_list) {         temp_file <- read.csv(header = TRUE, paste("C:/Big Data/Data science/Practicals/Data/NI Crime Data/NI Crime Data/", i, sep = ""), stringsAsFactors = FALSE)         NI_crime_file <- rbind(NI_crime_file, temp_file)     }     return(NI_crime_file) }
NI_crime_data <- combine_files(csv_file_list)
str(NI_crime_data)
write.csv(NI_crime_data, file = "Data/AllNICrimeData.csv", quote = FALSE, na = "", row.names = FALSE)
AllNICrime_data <- read.csv("Data/AllNICrimeData.csv")
#No. of rows in AllNICrime file
nrow(AllNICrime_data)
#Removing the unwanted columns
str(AllNICrime_data)
AllNICrime_data$Crime.ID <- NULL
AllNICrime_data$Reported.by <- NULL
AllNICrime_data$Falls.within <- NULL
AllNICrime_data$LSOA.code <- NULL
AllNICrime_data$LSOA.name <- NULL
AllNICrime_data$Last.outcome.category <- NULL
AllNICrime_data$Context <- NULL
str(AllNICrime_data)
head(AllNICrime_data)
#Factorizing crime_type attribute
Crime_type <- factor(NI_crime_data$Crime.type, order = FALSE)
NI_crime_data$Crime.type <- Crime_type
str(NI_crime_data)
#Modifying location attribute
head(AllNICrime_data)
AllNICrime_data <- sapply(AllNICrime_data, function(x) { AllNICrime_data$Location <- gsub("On or near", '', AllNICrime_data$Location) })
head(AllNICrime_data)
AllNICrime_data <- sapply(AllNICrime_data, function(x) { AllNICrime_data$Location <- gsub("On or near", '', AllNICrime_data$Location, ignore.case = T) })
head(AllNICrime_data)
AllNICrime_data <- sapply(AllNICrime_data, function(x) { AllNICrime_data$Location <- gsub("On or near", '', AllNICrime_data$Location, ignore.case = TRUE) })
AllNICrime_data <- sapply(AllNICrime_data, function(x) { AllNICrime_data$Location <- gsub("On or near", '', AllNICrime_data$Location) })
str(NI_crime_data)
#Modifying location attribute
AllNICrime_data <- sapply(AllNICrime_data, function(x) { AllNICrime_data$Location <- gsub("On or near", '', AllNICrime_data$Location) })
str(AllNICrime_data)
csv_file_list <- list.files(path = "C:/Big Data/Data science/Practicals/Data/NI Crime Data/NI Crime Data", pattern = "*.csv", recursive = TRUE)
csv_file_list
combine_files <- function(file_list) {     NI_crime_file <- NULL     for (i in file_list) {         temp_file <- read.csv(header = TRUE, paste("C:/Big Data/Data science/Practicals/Data/NI Crime Data/NI Crime Data/", i, sep = ""), stringsAsFactors = FALSE)         NI_crime_file <- rbind(NI_crime_file, temp_file)     }     return(NI_crime_file) }
NI_crime_data <- combine_files(csv_file_list)
str(NI_crime_data)
write.csv(NI_crime_data, file = "Data/AllNICrimeData.csv", quote = FALSE, na = "", row.names = FALSE)
AllNICrime_data <- read.csv("Data/AllNICrimeData.csv")
#No. of rows in AllNICrime file
nrow(AllNICrime_data)
#Removing the unwanted columns
str(AllNICrime_data)
AllNICrime_data$Crime.ID <- NULL
AllNICrime_data$Reported.by <- NULL
AllNICrime_data$Falls.within <- NULL
AllNICrime_data$LSOA.code <- NULL
AllNICrime_data$LSOA.name <- NULL
AllNICrime_data$Last.outcome.category <- NULL
AllNICrime_data$Context <- NULL
str(AllNICrime_data)
head(AllNICrime_data)
#Factorizing crime_type attribute
Crime_type <- factor(NI_crime_data$Crime.type, order = FALSE)
NI_crime_data$Crime.type <- Crime_type
str(NI_crime_data)
AllNICrime_data <- sapply(AllNICrime_data, function(x) { AllNICrime_data$Location <- gsub("On or near", '', AllNICrime_data$Location, ignore.case = TRUE) })
head(AllNICrime_data)
AllNICrime_data <- sapply(AllNICrime_data$Location, function(x) { AllNICrime_data$Location <- gsub("On or near", '', AllNICrime_data$Location) })
AllNICrime_data <- sapply(AllNICrime_data, function(x) { AllNICrime_data$Location <- gsub("On or near", " ", AllNICrime_data$Location) })
head(AllNICrime_data)
AllNICrime_data <- sapply(AllNICrime_data, function(x) { AllNICrime_data$Location <- gsub("On or near", " ", AllNICrime_data$Location) })
AllNICrime_data <- sapply(AllNICrime_data, function(x) { AllNICrime_data$Location <- gsub("On or near", " ", AllNICrime_data$Location) })
Crime_type <- factor(NI_crime_data$Crime.type, order = FALSE)
NI_crime_data$Crime.type <- Crime_type
str(NI_crime_data)
#Modifying location attribute
AllNICrime_data <- sapply(AllNICrime_data, function(x) { AllNICrime_data$Location <- gsub("On or near", " ", AllNICrime_data$Location) })
 AllNICrime_data$Location <- gsub("On or near", " ", AllNICrime_data$Location) 
attach(AllNICrime_data)
str(NI_crime_data)
attach(AllNICrime_data)
AllNICrime_data <- read.csv("Data/AllNICrimeData.csv")
#No. of rows in AllNICrime file
nrow(AllNICrime_data)
class(AllNICrime_data)
attach(AllNICrime_data)
 Location <- gsub("On or near", " ", Location) 
head(AllNICrime_data)
AllNICrime_data <- sapply(AllNICrime_data, function(x) { AllNICrime_data$Location <- gsub("On or near", " ", AllNICrime_data$Location) })
head(AllNICrime_data)
AllNICrime_data <- read.csv("Data/AllNICrimeData.csv")
#No. of rows in AllNICrime file
nrow(AllNICrime_data)
#Removing the unwanted columns
str(AllNICrime_data)
AllNICrime_data$Crime.ID <- NULL
AllNICrime_data$Reported.by <- NULL
AllNICrime_data$Falls.within <- NULL
AllNICrime_data$LSOA.code <- NULL
AllNICrime_data$LSOA.name <- NULL
AllNICrime_data$Last.outcome.category <- NULL
AllNICrime_data$Context <- NULL
str(AllNICrime_data)
head(AllNICrime_data)
#Factorizing crime_type attribute
Crime_type <- factor(NI_crime_data$Crime.type, order = FALSE)
NI_crime_data$Crime.type <- Crime_type
str(NI_crime_data)
AllNICrime_data$Location <- sapply(AllNICrime_data$Location, function(x) { AllNICrime_data$Location <- gsub("On or near", " ", AllNICrime_data$Location) })
#Amalgamating all crime data into single file.
csv_file_list <- list.files(path = "C:/Big Data/Data science/Practicals/Data/NI Crime Data/NI Crime Data", pattern = "*.csv", recursive = TRUE)
csv_file_list
#Amalgamating all crime data into single file.
csv_file_list <- list.files(path = "C:/Big Data/Data science/Practicals/Data/NI Crime Data/NI Crime Data", pattern = "*.csv", recursive = TRUE)
csv_file_list
combine_files <- function(file_list) {     NI_crime_file <- NULL     for (i in file_list) {         temp_file <- read.csv(header = TRUE, paste("C:/Big Data/Data science/Practicals/Data/NI Crime Data/NI Crime Data/", i, sep = ""), stringsAsFactors = FALSE)         NI_crime_file <- rbind(NI_crime_file, temp_file)     }     return(NI_crime_file) }
NI_crime_data <- combine_files(csv_file_list)
str(NI_crime_data)
write.csv(NI_crime_data, file = "Data/AllNICrimeData.csv", quote = FALSE, na = "", row.names = FALSE)
AllNICrime_data <- read.csv("Data/AllNICrimeData.csv")
#No. of rows in AllNICrime file
nrow(AllNICrime_data)
#Removing the unwanted columns
str(AllNICrime_data)
AllNICrime_data$Crime.ID <- NULL
AllNICrime_data$Reported.by <- NULL
AllNICrime_data$Falls.within <- NULL
AllNICrime_data$LSOA.code <- NULL
AllNICrime_data$LSOA.name <- NULL
AllNICrime_data$Last.outcome.category <- NULL
AllNICrime_data$Context <- NULL
str(AllNICrime_data)
head(AllNICrime_data)
#Factorizing crime_type attribute
Crime_type <- factor(NI_crime_data$Crime.type, order = FALSE)
NI_crime_data$Crime.type <- Crime_type
str(NI_crime_data)
#Modifying location attribute
AllNICrime_data <- sapply(AllNICrime_data$Location, function(AllNICrime_data$Location) { AllNICrime_data$Location <- gsub("On or near", " ", AllNICrime_data$Location) })
AllNICrime_data <- sapply(AllNICrime_data$Location, function(x) { AllNICrime_data$Location <- gsub("On or near", " ", AllNICrime_data$Location) })
source("C:/Users/Vanya/AppData/Local/Temp/practicalc.R", echo = TRUE, encoding = "Windows-1252")
AllNICrime_data$Location <- gsub("On or near", " ", AllNICrime_data$Location)
head(AllNICrime_data)
AllNICrime_data$Location <- gsub("On or near", " ", AllNICrime_data$Location, ignore.case = TRUE)
head(AllNICrime_data)
str(NI_crime_data)
NI_crime_data[NI_crime_data$Location == " "] <- 'Location not available'
head(NI_crime_data)
AllNICrime_data$Location <- gsub("On or near", " ", AllNICrime_data$Location)
head(AllNICrime_data)
NI_crime_data[NI_crime_data$Location == " "] <- 'Location not available'
head(NI_crime_data)
AllNICrime_data[AllNICrime_data$Location == " "] <- 'Location not available'
head(AllNICrime_data)
AllNICrime_data$Location[AllNICrime_data$Location == " "] <- 'Location not available'
head(AllNICrime_data)
AllNICrime_data$Location[AllNICrime_data$Location == ""] <- "Location not available"
head(AllNICrime_data)
AllNICrime_data[AllNICrime_data$Location == ""] <- "Location not available"
head(AllNICrime_data)
AllNICrime_data <- read.csv("Data/AllNICrimeData.csv")
#No. of rows in AllNICrime file
nrow(AllNICrime_data)
AllNICrime_data$Location <- ifelse(NI_crime_data$Location == "", 'NA', NI_crime_data$Location)
AllNICrime_data$Location <- AllNICrime_data[AllNICrime_data$Location == NA]
AllNICrime_data$Location <- AllNICrime_data[AllNICrime_data$Location == NA,]
head(AllNICrime_data)
AllNICrime_data$Crime.ID <- NULL
AllNICrime_data$Reported.by <- NULL
AllNICrime_data$Falls.within <- NULL
AllNICrime_data$LSOA.code <- NULL
AllNICrime_data$LSOA.name <- NULL
AllNICrime_data$Last.outcome.category <- NULL
AllNICrime_data$Context <- NULL
str(AllNICrime_data)
head(AllNICrime_data)
AllNICrime_data <- AllNICrime_data[,c(2,5,6,7,10)]
AllNICrime_data <- read.csv("Data/AllNICrimeData.csv")
nrow(AllNICrime_data)
AllNICrime_data <- AllNICrime_data[,c(2,5,6,7,10)]
str(AllNICrime_data)
head(AllNICrime_data)
Crime_type <- factor(NI_crime_data$Crime.type, order = FALSE)
NI_crime_data$Crime.type <- Crime_type
str(NI_crime_data)
head(AllNICrime_data)
#Factorizing crime_type attribute
Crime_type <- factor(AllNICrime_data$Crime.type, order = FALSE)
AllNICrime_data$Crime.type <- Crime_type
str(AllNICrime_data)
#Modifying location attribute
AllNICrime_data$Location <- gsub("On or near", " ", AllNICrime_data$Location)
head(AllNICrime_data)
AllNICrime_data$Location <- AllNICrime_data[AllNICrime_data$Location == NA,]
head(AllNICrime_data)
AllNICrime_data[AllNICrime_data$Location == ""] <- NA
AllNICrime_data <- read.csv("Data/AllNICrimeData.csv")
str(AllNICrime_data)
AllNICrime_data <- AllNICrime_data[, c(2, 5, 6, 7, 10)]
str(AllNICrime_data)
head(AllNICrime_data)
Crime_type <- factor(AllNICrime_data$Crime.type, order = FALSE)
AllNICrime_data$Crime.type <- Crime_type
str(AllNICrime_data)
AllNICrime_data$Location <- gsub("On or near ", "", AllNICrime_data$Location)
head(AllNICrime_data)
AllNICrime_data[AllNICrime_data$Location == ""] <- NA
AllNICrime_data$Location[AllNICrime_data$Location == ""] <- NA
head(AllNICrime_data)
clean_postcode <- read.csv("/Data/CleanNIPostcodeData.csv")
clean_postcode <- read.csv("Data/CleanNIPostcodeData.csv")
clean_postcode <- read.csv("Data/CleanNIPostcodeData.csv", stringsAsFactors = FALSE)
head(clean_postcode)
nrow(AllNICrime_data)
NROW(AllNICrime_data)
AllNICrime_data <- read.csv("Data/AllNICrimeData.csv")
#No. of rows in AllNICrime file
NROW(AllNICrime_data)
#Removing the unwanted columns
str(AllNICrime_data)
AllNICrime_data <- AllNICrime_data[, c(2, 5, 6, 7, 10)]
str(AllNICrime_data)
head(AllNICrime_data)
AllNICrime_data$Location <- gsub("On or near ", "", AllNICrime_data$Location)
AllNICrime_data$Location[AllNICrime_data$Location == ""] <- NA
head(AllNICrime_data)
#Task 5 
clean_postcode <- read.csv("Data/CleanNIPostcodeData.csv", stringsAsFactors = FALSE)
head(clean_postcode)
clean_postcode <- read.csv("Data/CleanNIPostcodeData.csv", stringsAsFactors = FALSE)
head(clean_postcode)
tolower(clean_postcode$Primary_Thorfare)
postcodde_loc <- unique(clean_postcode$Primary_Thorfare)
postcodde_loc
clean_postcode <- read.csv("Data/CleanNIPostcodeData.csv", stringsAsFactors = FALSE)
head(clean_postcode)
tolower(clean_postcode$Primary_Thorfare)
find_a_postcode <- function(loc)     {     postcodde_loc <- unique(clean_postcode$Primary_Thorfare)     names(which.max(table(loc == postcodde_loc)))     }
AllNICrime_data$postcode <- lapply(AllNICrime_data$Location, find_a_postcode)
clean_postcode <- read.csv("Data/CleanNIPostcodeData.csv", stringsAsFactors = FALSE)
head(clean_postcode)
tolower(clean_postcode$Primary_Thorfare)
clean_postcode$new <- names(which.max(table(clean_postcode$Primary_Thorfare)))
head(clean_postcode)
library(dplyr)
install.packages("dplyr")
library(dplyr)
AllNICrime_data <- read.csv("Data/AllNICrimeData.csv")
#No. of rows in AllNICrime file
NROW(AllNICrime_data)
#Removing the unwanted columns
str(AllNICrime_data)
AllNICrime_data <- AllNICrime_data[, c(2, 5, 6, 7, 10)]
str(AllNICrime_data)
head(AllNICrime_data)
#Factorizing crime_type attribute
Crime_type <- factor(AllNICrime_data$Crime.type, order = FALSE)
AllNICrime_data$Crime.type <- Crime_type
str(AllNICrime_data)
#Modifying location attribute
AllNICrime_data$Location <- gsub("On or near ", "", AllNICrime_data$Location)
AllNICrime_data$Location[AllNICrime_data$Location == ""] <- NA
head(AllNICrime_data)
#Task 5 
clean_postcode <- read.csv("Data/CleanNIPostcodeData.csv", stringsAsFactors = FALSE)
head(clean_postcode)
clean_postcode$Primary_Thorfare <- tolower(clean_postcode$Primary_Thorfare)
head(clean_postcode)
crime_location <- select(AllNICrime_data, location)
crime_location <- select(AllNICrime_data, Location)
crime_location
postcode_loc <- select(clean_postcode, Primary_Thorfare, Postcode)
postcode_loc
str(postcode_loc)
data <- tbl_df(postcode_loc)
str(data)
find_a_postcode <- function(loc) {     filterd_data <- filter(data, Primary_Thorfare == loc)     suitable_postcode <- names(which.max(table(filterd_data$Postcode))) }
data <- tbl_df(postcode_loc)
AllNICrime_data$postcode <- lapply(AllNICrime_data$Location, find_a_postcode)
head(AllNICrime_data)
str(data)
find_a_postcode <- function(loc) {     filterd_data <- filter(data, Primary_Thorfare == loc)     suitable_postcode <- names(which.max(table(filterd_data$Postcode)))     return(suitable_postcode) }
AllNICrime_data$postcode <- lapply(AllNICrime_data$Location, find_a_postcode)
head(AllNICrime_data)
postcode <- lapply(AllNICrime_data$Location, find_a_postcode)
head(clean_postcode)
clean_postcode$Primary_Thorfare <- tolower(clean_postcode$Primary_Thorfare)
clean_postcode <- read.csv("Data/CleanNIPostcodeData.csv", stringsAsFactors = FALSE)
AllNICrime_data$Location <- toupper(AllNICrime_data$Location)
head(AllNICrime_data)
head(clean_postcode)
postcode_loc <- select(clean_postcode, Primary_Thorfare, Postcode)
str(postcode_loc)
data <- tbl_df(postcode_loc)
str(data)
find_a_postcode <- function(loc) {     filterd_data <- filter(data, Primary_Thorfare == loc)     suitable_postcode <- names(which.max(table(filterd_data$Postcode)))     return(suitable_postcode) }
postcode <- lapply(AllNICrime_data$Location, find_a_postcode)
postcode <- sapply(postcode, paste0, collapse = "")
head(AllNICrime_data)
head(data)
clean_postcode <- read.csv("Data/CleanNIPostcodeData.csv", stringsAsFactors = FALSE)
head(clean_postcode)
data <- tbl_df(clean_postcode)
data <- data[,c(5,9)]
str(data)
head(data)
head(clean_postcode)
data <- tbl_df(clean_postcode)
data <- data[,c(4,9)]
str(data)
head(data)
test <- find_a_postcode("HIGH ROAD")
test
class(test)
AllNICrime_data <- read.csv("C:/Big Data/Data science/Practicals/Data/sample.csv")
NROW(AllNICrime_data)
#Removing the unwanted columns
str(AllNICrime_data)
AllNICrime_data <- AllNICrime_data[, c(2, 5, 6, 7, 10)]
str(AllNICrime_data)
head(AllNICrime_data)
#Factorizing crime_type attribute
Crime_type <- factor(AllNICrime_data$Crime.type, order = FALSE)
AllNICrime_data$Crime.type <- Crime_type
str(AllNICrime_data)
#Modifying location attribute
AllNICrime_data$Location <- gsub("On or near ", "", AllNICrime_data$Location)
AllNICrime_data$Location[AllNICrime_data$Location == ""] <- NA
AllNICrime_data$Location <- toupper(AllNICrime_data$Location)
head(AllNICrime_data)
#Task 5 
clean_postcode <- read.csv("Data/CleanNIPostcodeData.csv", stringsAsFactors = FALSE)
head(clean_postcode)
library(dplyr)
data <- tbl_df(clean_postcode)
data <- data[,c(4,9)]
str(data)
head(data)
find_a_postcode <- function(loc) {     filterd_data <- filter(data, Primary_Thorfare == loc)     suitable_postcode <- names(which.max(table(filterd_data$Postcode)))     return(suitable_postcode) }
test <- find_a_postcode("HIGH ROAD")
class(test)
test
postcode <- lapply(AllNICrime_data$Location, find_a_postcode)
head(postcode)
class(postcode)
postcode <- sapply(postcode, paste0, collapse = "")
class(postcode)
head(postcode)
AllNICrime_data$Postcode <- postcode
head(AllNICrime_data)
head(AllNICrime_data)
data_crime <- data_crime[, c(2,3,9)]
data_crime <- tbl_df(AllNICrime_data)
data_crime <- data_crime[, c(2,3,9)]
clean_postcode <- read.csv("Data/CleanNIPostcodeData.csv", stringsAsFactors = FALSE)
head(clean_postcode)
AllNICrime_data <- read.csv("Data/AllNICrimeData.csv")
NROW(AllNICrime_data)
str(AllNICrime_data)
AllNICrime_data <- AllNICrime_data[, c(2, 5, 6, 7, 10)]
str(AllNICrime_data)
head(AllNICrime_data)
#Factorizing crime_type attribute
Crime_type <- factor(AllNICrime_data$Crime.type, order = FALSE)
AllNICrime_data$Crime.type <- Crime_type
str(AllNICrime_data)
#Modifying location attribute
AllNICrime_data$Location <- gsub("On or near ", "", AllNICrime_data$Location)
AllNICrime_data$Location[AllNICrime_data$Location == ""] <- NA
AllNICrime_data$Location <- toupper(AllNICrime_data$Location)
head(AllNICrime_data)
#Finding postcodes based on location
clean_postcode <- read.csv("Data/CleanNIPostcodeData.csv", stringsAsFactors = FALSE)
head(clean_postcode)
data <- tbl_df(clean_postcode)
data <- data[,c(4,9)]
str(data)
head(data)
head(data)find_a_postcode <- function(loc) {     filterd_data <- filter(data, Primary_Thorfare == loc)     suitable_postcode <- names(which.max(table(filterd_data$Postcode)))     return(suitable_postcode) }
library(dplyr)
data <- tbl_df(clean_postcode)
data <- data[,c(4,9)]
str(data)
head(data)
find_a_postcode <- function(loc) {     filterd_data <- filter(data, Primary_Thorfare == loc)     suitable_postcode <- names(which.max(table(filterd_data$Postcode)))     return(suitable_postcode) }
find_a_postcode <- function(loc) {     filterd_data <- filter(data, Primary_Thorfare == loc)     suitable_postcode <- names(which.max(table(filterd_data$Postcode)))     return(suitable_postcode) }
postcode <- lapply(AllNICrime_data$Location, find_a_postcode)
head(postcode)
#Appending the postcode in AllNICrime data
postcode <- sapply(postcode, paste0, collapse = "")
class(postcode)
head(postcode)
AllNICrime_data$Postcode <- postcode
head(AllNICrime_data)
head(AllNICrime_data)
data_crime <- tbl_df(AllNICrime_data)
data_crime <- data_crime[, c(2,3,9)]
str(data_crime)
data_crime <- tbl_df(AllNICrime_data, Longitude,Latitude,Postcode)
str(data_crime)
data_crime <- tbl_df(AllNICrime_data)
data_crime <- data[, c(4, 9)]
data_crime <- tbl_df(AllNICrime_data)
str(data)
head(data)
empty_loc_data <- filter(data_crime, Postcode == "")
empty_loc_data
install.packages("ggmap")
library(ggmap)
data_crime <- tbl_df(AllNICrime_data)
str(data)
head(data)
str(data_crime)
head(data_crime)
empty_loc_data <- filter(data_crime, Postcode == "")
empty_loc_data
tidy_location <- function(lon,lat) {     code <- revgeocode(c(lon,lat)) }
all_postcode <- lapply(empty_loc_data$Longitude, empty_loc_data$Latitude, tidy_location)
empty_loc_data <- filter(data_crime, Postcode == "")
empty_loc_data
all_postcode <- lapply(empty_loc_data$Longitude, empty_loc_data$Latitude, tidy_location)
class(empty_loc_data)
all_postcode <- mapply(empty_loc_data$Longitude, empty_loc_data$Latitude, tidy_location)
result <- do.call(rbind,                   lapply(1:nrow(empty_loc_data),                          function(i) revgeocode(as.numeric(empty_loc_data[i, 3:2]))))
result <- do.call(rbind,                   lapply(1:nrow(empty_loc_data),                          function(i) revgeocode(as.numeric(empty_loc_data[i, 3:2]))))
str(postcode)
head(postcode)
head(AllNICrime_data)
str(AllNICrime_data)
data_crime <- tbl_df(AllNICrime_data)
str(data_crime)
head(data_crime)
empty_loc_data <- filter(data_crime, Postcode == "")
empty_loc_data
empty_loc_data$Postcode <- mapply(FUN = function(lon, lat) revgeocode(c(lon, lat)), empty_loc_data$Longitude, empty_loc_data$Latitude)
AllNICrime_data$Town <- clean_postcode$Town
AllNICrime_data$Town <- clean_postcode$Town[match(AllNICrime_data$Postcode, clean_postcode$Postcode)]
str(AllNICrime_data)
AllNICrime_data$county <- clean_postcode$County[match(AllNICrime_data$Postcode, clean_postcode$Postcode)]
str(AllNICrime_data)
new_file <- read.csv("Data/NIPostcodes.csv")
NIPostcode <- read.csv("Data/NIPostcodes.csv")
new_file <- merge(x = AllNICrime_data, y = NIPostcode, by = "Location", all.x = TRUE)
NIPostcode <- read.csv("Data/NIPostcodes.csv")
str(NIPostcode)
NIPostcode <- read.csv("Data/NIPostcodes.csv", header = TRUE)
str(NIPostcode)
str(AllNICrime_data)
head(AllNICrime_data)
write.csv(nip_data, file = "Data/FinalNICrimeData", quote = FALSE, row.names = FALSE)
write.csv(AllNICrime_data, file = "Data/FinalNICrimeData", quote = FALSE, row.names = FALSE)
Finalcrimedata <- read.csv("Data/FinalNICrimeData")
str(Finalcrimedata)
head(Finalcrimedata)
new <- (Finalcrimedata$Town == "Strabane" & Finalcrimedata$Postcode == "BT82")
head(new)
new <- filter(Finalcrimedata$Town == "Strabane" & Finalcrimedata$Postcode == "BT82")
new <- filter(Finalcrimedata$Town == "Strabane" ,Finalcrimedata$Postcode == "BT82")
new <- subset(Finalcrimedata, grepl("Strabane", Location) & grepl("BT82", Postcode) ))
new <- subset(Finalcrimedata, grepl("Strabane", Location) & grepl("BT82", Postcode) )
str(new)
head(new)
install.packages("rvest")
library(rvest)
#Irish Times webpage is loaded
url <- 'https://www.irishtimes.com/profile/conor-lally-7.1010727'
web_page <- read_html(url)
head(web_page)
str(web_page)
#Scrapping crime headings
crime_data_html <- html_nodes(web_page, '#search_results > div:nth-child(n) > div > div > div > span > a')
crime_data <- html_text(crime_data_html)
head(crime_data, 10)
length(crime_data)
#Scrapping news category
crime_type_html <- html_nodes(web_page, '#search_results > div:nth-child(n) > div > div > div > ul > li.news.first > a')
crime_type_data <- html_text(crime_type_html)
head(crime_type_data, 10)
length(crime_type_data)
#Scrapping date of the crime 
crime_date_html <- html_nodes(web_page, '#search_results > div:nth-child(n) > div > div > div > ul > li.date')
crime_date_data <- html_text(crime_date_html)
head(crime_date_data, 10)
#Removing the time from the date
crime_date <- sub(",[^,]+$*", "", crime_date_data)
head(crime_date, 10)
length(crime_date)
#Scrapping description of crime
crime_desc_html <- html_nodes(web_page, '#search_results > div:nth-child(n) > div > div > p')
crime_desc_data <- html_text(crime_desc_html)
head(crime_desc_data, 20)
length(crime_desc_data)
new_dataset <- data.frame(crime_data, crime_type_data, crime_date, crime_desc_data)
str(new_dataset)
head(new_dataset)
#Aligning the data into columns
install.packages("knitr")
library(knitr)
new_dataset <- kable(new_dataset)
head(new_dataset, 10)
saveRDS(new_dataset, file = "crime_webScrapping.rds")
